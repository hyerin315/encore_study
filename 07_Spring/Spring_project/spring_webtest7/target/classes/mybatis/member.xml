<?xml version="1.0" encoding="UTF-8" ?> 
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="spring.model.member.MemberMapper">
	<update id="updateFileForm" parameterType="Map">
		UPDATE member2
		SET fname = #{fname}
		WHERE id = #{id}
	</update>
	<select id="total" parameterType="Map" resultType="int">
		SELECT count(*) FROM member2
		<where>
			<choose>
				<when test="col=='mname'">
					mname like '%'||#{word}||'%'
				</when>
				<when test="col=='id'">
					id like '%'||#{word}||'%'
				</when>
				<when test="col=='email'">
					email like '%'||#{word}||'%'
				</when>
			</choose>
		</where>
	</select>
	<select id="list" parameterType="Map" resultType="MemberDTO">
		SELECT id, mname, tel, email, zipcode, address1, address2,
		fname, r
		from(
			SELECT id, mname, tel, email, zipcode, address1, address2,
			fname, rownum r
			from(
				SELECT id, mname, tel, email, zipcode, address1,
				address2, fname
				FROM member2
				<where>
					<choose>
						<when test="col=='mname'">
							mname like '%'||#{word}||'%'
						</when>
						<when test="col=='id'">
							id like '%'||#{word}||'%'
						</when>
						<when test="col=='email'">
							email like '%'||#{word}||'%'
						</when>
					</choose>
				</where>
				ORDER BY mdate DESC
			)
	<![CDATA[
		)where r >= #{sno} and r <= #{eno}
	]]>
	</select>
	<update id= "update" parameterType="MemberDTO">
		UPDATE member2
		SET tel = #{tel},
			email = #{email},
			zipcode = #{zipcode},
			address1 = #{address1},
			address2 = #{address2},
			job = #{job}
		WHERE id = #{id}
	</update>
	<select id= "read" parameterType="String" resultType="MemberDTO">
		SELECT * FROM member2
		WHERE id = #{id}
	</select>
	<select id="getGrade" parameterType="String" resultType="String">
		SELECT grade FROM member2
		WHERE id = #{id}
	</select>
	<select id="loginCheck" parameterType="Map" resultType="int">
		SELECT count(*) from member2
		WHERE id = #{id}
		AND passwd = #{passwd}
	</select>
	<select id="duplicatedId" parameterType="String" resultType="int">
		SELECT count(*) FROM member2
		WHERE id = #{id}
	</select>
	<select id="duplicatedEmail" parameterType="String" resultType="int">
		SELECT count(*) FROM member2
		WHERE email = #{email}
	</select>
	<insert id="create" parameterType="MemberDTO">
		INSERT INTO member2(id, passwd, mname, tel, email, zipcode,
		address1, address2, job, mdate, fname, grade)
		VALUES(#{id}, #{passwd}, #{mname}, #{tel}, #{email}, #{zipcode},
		#{address1}, #{address2}, #{job}, sysdate, #{fname}, 'H')
	</insert>
</mapper>